@using car_rental.Web.ViewModels.Deals
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@model BookingViewModel

@{
	ViewData["Title"] = "Deal Booking";
	var user = await UserManager.GetUserAsync(User);
}

<form asp-controller="Deals" asp-action="Booking">
	<div class="col-md-4">
		<label asp-for="BookingFormDTO.Address" class="form-label">Pick-Up Address</label>
		<input asp-for="BookingFormDTO.Address" type="text" class="form-control" />
	</div>
	<label for="bookingRange">Select Booking Range</label>
	<input type="text" id="bookingRange" class="form-control" />
	<div class="col-md-4">
		<label asp-for="BookingFormDTO.BookingStartDate" class="form-label">Pick-Up Date</label>
		<input id="BookingStartDate" asp-for="BookingFormDTO.BookingStartDate" type="hidden" class="form-control" />
	</div>

	<div class="col-md-4">
		<label asp-for="BookingFormDTO.BookingEndDate" class="form-label">Drop-Off Date</label>
		<input id="BookingEndDate" asp-for="BookingFormDTO.BookingEndDate" type="hidden" class="form-control" />
	</div>

	<div class="col-md-4">
		<input name="BookingFormDTO.UserId" value="@user?.Id" type="hidden" class="form-control" />
	</div>

	<div class="col-md-4">
		<input name="BookingFormDTO.CarId" value="@Model.BookingFormDTO.CarId" type="hidden" class="form-control" />
	</div>


	<div class="col">
		<div class="card h-100 border-0 shadow-lg position-relative overflow-hidden"
			 style="transition: all 0.3s ease; border-radius: 15px;">

			<!-- Luxury Accent Border -->
			<div class="position-absolute top-0 start-0 w-100"
				 style="height: 4px; background: linear-gradient(90deg, #198754, #20c997, #198754);"></div>

			<!-- Car Image -->
			<div class="position-relative">
				<div class="card-img-top"
					 style="height: 250px;
                                        background-size: cover;
                                        background-position: center;
                                        background-image: url(data:image/*;base64,@Model.CarDTO.CarImage);
                                        border-radius: 15px 15px 0 0;">
				</div>
				<!-- Availability Badge -->
				<div class="position-absolute top-0 end-0 m-3">
					@if (Model.CarDTO.IsExist)
					{
						<span class="badge bg-success px-3 py-2 rounded-pill shadow">
							<i class="fas fa-check-circle me-1"></i>Available
						</span>
					}
					else
					{
						<span class="badge bg-secondary px-3 py-2 rounded-pill shadow">
							<i class="fas fa-times-circle me-1"></i>Not Available
						</span>
					}
				</div>
			</div>

			<!-- Card Body -->
			<div class="card-body p-4">
				<!-- Car Title -->
				<h5 class="card-title text-success mb-3 fw-bold" style="font-size: 1.25rem;">
					<span class="">@Model.CarDTO.Brand</span> @Model.CarDTO.Name
				</h5>

				<!-- Year -->
				<div class="d-flex align-items-center mb-3">
					<i class="fas fa-tag text-success me-2"></i>
					<span class="text-muted fw-bolder"><strong>Year:</strong> @Model.CarDTO.Year</span>
				</div>

				<!-- Price - Highlighted -->
				<div class="bg-light rounded-3 p-3 mb-3 border-start border-success border-4">
					<div class="d-flex align-items-center">
						<i class="fas fa-dollar-sign text-success me-2"></i>
						<span class="fw-bold text-dark">$@Model.CarDTO.PricePerDay</span>
						<span class="text-muted ms-1">/ day</span>
					</div>
				</div>

				<!-- Car Specifications -->
				<div class="row g-2 mb-3">
					<div class="col-12">
						<div class="d-flex align-items-center mb-2">
							<i class="fas fa-cogs text-success me-2" style="width: 16px;"></i>
							<small class="text-muted">
								<strong>Transmission:</strong> @Model.CarDTO.carTransmission.ToString()
							</small>
						</div>
					</div>
					<div class="col-12">
						<div class="d-flex align-items-center mb-2">
							<i class="fas fa-gas-pump text-success me-2" style="width: 16px;"></i>
							<small class="text-muted">
								<strong>Fuel:</strong> @Model.CarDTO.carFuel.ToString()
							</small>
						</div>
					</div>
					<div class="col-12">
						<div class="d-flex align-items-center mb-2">
							<i class="fas fa-car text-success me-2" style="width: 16px;"></i>
							<small class="text-muted">
								<strong>Body Type:</strong> @Model.CarDTO.carBodyType.ToString()
							</small>
						</div>
					</div>
				</div>

				<!-- Features -->
				@if (Model.CarDTO.Features.Any())
				{
					<div class="mb-3">
						<h6 class="text-success mb-2">
							<i class="fas fa-star me-1"></i>Premium Features
						</h6>
						<div class="row g-1">
							@foreach (var feature in Model.CarDTO.Features.Take(4))
							{
								<div class="col-6">
									<small class="text-muted d-flex align-items-center">
										<i class="fas fa-check text-success me-1" style="font-size: 0.7rem;"></i>
										@feature
									</small>
								</div>
							}
							@if (Model.CarDTO.Features.Count() > 4)
							{
								<div class="col-12">
									<small class="text-success">+@(Model.CarDTO.Features.Count() - 4) more features</small>
								</div>
							}
						</div>
					</div>
				}
			</div>

			<!-- Card Footer with Actions -->
			<div class="card-footer bg-white border-0 p-4 pt-0">
				<div class="d-grid gap-2 d-flex justify-content-md-between">
					<h1 class="px-4 fw-bolder text-success">
						@Model.BookingFormDTO.TotalCost
					</h1>
					@* onsubmit="return confirm('Are you sure you want to delete this car?');"> *@
					<button type="submit" class="btn btn-outline-danger btn-sm px-5 rounded-pill flex-fill me-md-2">
						<i class="fas fa-trash me-1"></i> Confirm Booking
					</button>
				</div>
			</div>
		</div>
	</div>
</form>

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
	<script>
		$(document).ready(function () {
		// Preview uploaded image
		$('#brandLogo').on('change', function () {
		const file = this.files[0];
		if (file) {
		const url = URL.createObjectURL(file);
		$('#logoPreview').attr('src', url).removeClass('d-none');
		}
		});

	</script>
	<script>
		const bookedRanges = [
		@if (Model.CarDTO.Bookings is not null)
		{
			@foreach (var booking in Model.CarDTO.Bookings)
			{
				<text>
								{
									start: '@booking.BookingStartDate.ToString("yyyy-MM-dd")',
									end: '@booking.BookingEndDate.ToString("yyyy-MM-dd")'
								},
				</text>
			}}
		];
	</script>


	<script>
		const disableDates = [];

		// Fill disableDates array with all individual dates between start and end
		bookedRanges.forEach(range => {
			const start = new Date(range.start);
			const end = new Date(range.end);
			for (let d = new Date(start); d <= end; d.setDate(d.getDate() + 1)) {
				disableDates.push(d.toISOString().split('T')[0]); // yyyy-MM-dd
			}
		});

		flatpickr("#bookingRange", {
			mode: "range",
			dateFormat: "d/m/Y", // dd/mm/yyyy
			disable: disableDates,
			onChange: function(selectedDates, dateStr, instance) {
				if (selectedDates.length === 2) {
					const start = selectedDates[0];
					const end = selectedDates[1];

					// Check for overlap with existing bookings
					const overlap = bookedRanges.some(range => {
						const rangeStart = new Date(range.start);
						const rangeEnd = new Date(range.end);
						return start <= rangeEnd && end >= rangeStart;
					});

					if (overlap) {
						alert("The selected date range overlaps with an existing booking.");
						instance.clear();
						document.getElementById("BookingStartDate").value = "";
						document.getElementById("BookingEndDate").value = "";
					} else {
						document.getElementById("BookingStartDate").value = start.toISOString().split('T')[0];
						document.getElementById("BookingEndDate").value = end.toISOString().split('T')[0];
					}
				}
			}
		});
	</script>

}
